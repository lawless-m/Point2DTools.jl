var documenterSearchIndex = {"docs":
[{"location":"#Point2DTools.jl","page":"Point2DTools.jl","title":"Point2DTools.jl","text":"","category":"section"},{"location":"","page":"Point2DTools.jl","title":"Point2DTools.jl","text":"Documentation for Point2DTools.jl","category":"page"},{"location":"","page":"Point2DTools.jl","title":"Point2DTools.jl","text":"convex","category":"page"},{"location":"#Point2DTools.convex","page":"Point2DTools.jl","title":"Point2DTools.convex","text":"convex(points)\n\nReturn the list of Point2D points which form the convex hull of the supplied points.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Point2DTools.jl","title":"Point2DTools.jl","text":"convexperm","category":"page"},{"location":"#Point2DTools.convexperm","page":"Point2DTools.jl","title":"Point2DTools.convexperm","text":"convexperm(points)\n\nReturn the list of indexes of the Point2D points which form the convex hull of the supplied points.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Point2DTools.jl","title":"Point2DTools.jl","text":"centroid","category":"page"},{"location":"#Point2DTools.centroid","page":"Point2DTools.jl","title":"Point2DTools.centroid","text":"centroid(points)\n\nCalculate the unweighted centre of the closed polygon defined by points. \n\nArguments\n\npoints a Vector of points, assumed to include the \"start\" and \"end\" point twice, so points[1] is ignored\n\n\n\n\n\n","category":"function"},{"location":"","page":"Point2DTools.jl","title":"Point2DTools.jl","text":"bounds","category":"page"},{"location":"#Point2DTools.bounds","page":"Point2DTools.jl","title":"Point2DTools.bounds","text":"bounds(points)\n\nReturn the Minimum::Point2D, Maximum::Point2D\n\nArguments\n\npoints Vector of points with .x and .y properties\n\nExamples\n\njulia> b1 = bounds([Point2D(-10,0), Point2D(1,2), Point2D(2,1)]) 2-element Vector{StaticArrays.SVector{2, Int64}}:  [-10, 0]  [2, 2] julia> b2 = bounds([Point2D(0,0), Point2D(1,2), Point2D(2,11)]) 2-element Vector{StaticArrays.SVector{2, Int64}}:  [0, 0]  [2, 11]  julia> bounds(vcat(b1, b2))  2-element Vector{StaticArrays.SVector{2, Int64}}:   [-10, 0]   [2, 11]\n\n\n\n\n\n","category":"function"}]
}
